(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "jquery", "Vue", "CommonBase"], factory);
    }
    else{
        factory(function(key){
            if(key === "jquery")
                return window.$;
            return window[key];
        },window);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Created by libra on 2017/4/8.
     */
    var $ = require("jquery");
    var Vue = require("Vue");
    var bc = require("CommonBase");
    /**
     * 编辑页面
     */
    var EditPage = (function () {
        function EditPage(el, config) {
            var o_this = this;
            this.el = el;
            this._config = config;
            this.submiting = false;
            this.vm = {
                model: this.model
            };
            this.events = {
                post: function () {
                   return  o_this.post.apply(o_this, arguments);
                },
                _run: function () {
                    return { instance: this, args: arguments };
                }
            };
        }
        EditPage.prototype.init = function () {
            this.get();
        };
        /**
         * 获取提交的数据
         */
        EditPage.prototype.getPostData = function () {
            var revm = {};
            if(this._config.exclude){
                var m = revm;
                var isIn = false;
                for (var k in this.vm.model){
                    for (var i = 0; i<  this._config.exclude.length;i++){
                        if(this._config.exclude[i]===k){
                            isIn = true;
                            break;
                        }
                    }
                    if(isIn){
                        isIn=false;
                        continue;
                    }
                    m[k] = this.vm.model[k];
                }
            }

            if(this._config.include){
                for (var k in this.vm.model){
                    for (var i = 0; i<  this._config.include.length;i++){
                        if(this._config.include[i]===k){
                            revm[k] = this.vm.model[k];
                            break;
                        }
                    }
                }
                return revm;
            }

            return this.model;
        };
        /**
         * 获取当前编辑的实体
         */
        EditPage.prototype.get = function () {
            bc.request(this._config.getAjax, { id: this.id }, function (ret) {
                this.model = ret.data;
                this.vm.model = this.model;
                this.render();
            }, this);
        };
        /**
         * 提交数据
         */
        EditPage.prototype.post = function (event) {
            var submitEl = null;
            if (!bc.isNullOrUndefined(event)) {
                if (this.submiting === true)
                    return false;
                this.submiting = true;
                submitEl= event.currentTarget;
                $(submitEl).attr({ "disabled": "disabled" });
            }
            var o_this = this;
            var postData = this.getPostData();
            if (!bc.isNullOrUndefined((this._config.beginPost) && typeof this._config.beginPost == "function")) {
                var args = new Array();
                args.push(postData);
                for(var i = 0;i<arguments.length;i++)
                    args.push(arguments[i]);
                var result = this._config.beginPost.apply(this,args);
                if (result === false){
                    if (!bc.isNullOrUndefined(submitEl)) {
                        $(submitEl).removeAttr("disabled");
                    }
                    o_this.submiting = false;
                    return false;
                }
            }
            bc.request(this._config.editAjax, postData, function (ret) {
                window.location.reload()
            }, this, function () {
                if (!bc.isNullOrUndefined(submitEl)) {
                    $(submitEl).removeAttr("disabled");
                }
                o_this.submiting = false;
            });
            return false;
        };
        EditPage.prototype.render = function () {
            var o_this = this;
            if (typeof this._config.beforeBinding == "function")
                this._config.beforeBinding.call(this);
            this.vueApp = new Vue({
                el: o_this.el,
                data: o_this.vm,
                methods: o_this.events,
            });

            if(o_this._config.bindEnd && typeof o_this._config.bindEnd === "function")
                o_this._config.bindEnd.call(o_this);
        };
        return EditPage;
    }());
    exports.EditPage = EditPage;
});
