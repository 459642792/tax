package com.blueteam.wineshop.service;

import com.blueteam.entity.dto.BaseResult;
import com.blueteam.entity.dto.MessageRecipient;
import com.blueteam.entity.dto.UserInfoSearch;
import com.blueteam.entity.dto.PageResult;
import com.blueteam.entity.po.UserInfo;

import javax.servlet.http.HttpSession;
import java.util.List;

/**
 * 用户逻辑层
 *
 * @author clam
 */
public interface UserService {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UserInfo
     *
     * @mbg.generated Mon Feb 20 11:11:38 CST 2017
     */
    UserInfo selectByPrimaryKey(Integer id);

    /**
     * 根据账号获取用户信息
     *
     * @param account 账号
     * @return 用户信息
     */
    UserInfo getUser(String account);

    /**
     * 登录
     *
     * @param account 账号 必须是电话号码
     * @return
     */
    BaseResult loginByPhone(String account, String loginIp, String dataSource);

    /**
     * 添加账号
     *
     * @param phone    手机号码
     * @param userType 用户类型
     * @param cityCode 创建者所属的区域代码
     * @param createBy 创建用户账号
     * @return
     */
    int addUser(String phone, int userType, String cityCode, String createBy);

    /**
     * 添加账号
     *
     * @param phone    手机号码
     * @param userType 用户类型
     * @param cityCode 创建者所属的区域代码
     * @param createBy 创建用户账号
     * @return
     */
    int addUser(String phone, String nikeName, int userType, String cityCode, String createBy);


    /**
     * 编辑用户信息
     * This method corresponds to the database table UserInfo
     *
     * @mbg.generated Mon Feb 20 11:11:38 CST 2017
     */
    int updateByPrimaryKey(UserInfo record);

    /**
     * 修改用户信息
     */
    int updateUser(UserInfo record);

    /**
     * 根据UserId获取用户信息，包括城市中文名称
     * This method corresponds to the database table UserInfo
     *
     * @mbg.generated Mon Feb 20 11:11:38 CST 2017
     */
    UserInfo getCityUserInfo(Integer id);

    /**
     * 新增用户信息
     */
    int insert(UserInfo record);

    /**
     * 根据UserId获取用户信息
     * This method corresponds to the database table UserInfo
     *
     * @mbg.generated Mon Feb 20 11:11:38 CST 2017
     */
    UserInfo getUserInfo(String wxopenid);

    BaseResult login4Vendors(String phone, String code);


    /**
     * 根据条件查询用户
     *
     * @param search 查询条件
     * @return
     */
    List<UserInfo> selectByWhere(UserInfo search);


    /**
     * 搜索用户信息，包含统计信息,交易次数，和交易总额
     *
     * @param search 搜索信息
     * @return
     */
    PageResult<List<UserInfo>> selectUserStaticsByWhere(UserInfoSearch search);

    /**
     * 用户密码登录
     *
     * @param userName 用户账号
     * @param password 用户密码
     * @return
     */
    BaseResult pwdLogin(String userName, String password);

    /**
     * 获取管理平台接受者
     *
     * @return
     */
    MessageRecipient getAdminRecipient();


    /**
     * 根据商家微信公众号openid 获取 用户
     *
     * @param vendorWxOpenId 微信 openid
     * @return
     */
    UserInfo getUserInfoByVendorOpenid(String vendorWxOpenId);

    /**
     * 方法的功能描述:TODO  电话号码
     *
     * @param
     * @return
     * @methodName
     * @author xiaojiang 2017/7/15 16:18
     * @since 1.3.0
     */
    UserInfo getUserInfoByTelePhone(String telephone, Integer status, Integer thirdStatus, Integer bindStatus);

    UserInfo getThirdPartyUserInfo(String thirdPartyId, Integer status, Integer thirdStatus, Integer bindStatus);

    /**
     * 密码登录（商家端）
     * @return
     */
    BaseResult loginByPwd(String telephone,String password,String code);


    /**
     * 修改密码
     * @param oldPwd
     * @param newPwd
     * @return
     */
    BaseResult updatePwd(String oldPwd,String newPwd,int userId);

    /**
     * 修改登录账号
     * @param telephone
     * @param id
     * @return
     */
    BaseResult updateAccount(String telephone,int id);
}
