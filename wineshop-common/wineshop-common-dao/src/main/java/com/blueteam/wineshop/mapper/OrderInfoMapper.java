package com.blueteam.wineshop.mapper;

import com.blueteam.entity.dto.BasePageSearch;
import com.blueteam.entity.po.OrderInfo;
import com.blueteam.entity.dto.PageResult;
import org.apache.ibatis.annotations.Param;

import java.util.Date;
import java.util.List;
import java.util.Map;

/**
 * @author Marx
 * <p>
 * OrderInfoDao.java
 * <p>
 * 2017年2月22日**@version 1.0
 */
public interface OrderInfoMapper {

    /**
     * @param userid
     * @return
     */
    List<OrderInfo> OrderInfoList(@Param("userid") int userid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OrderInfo
     *
     * @mbg.generated Sat Feb 18 11:02:07 CST 2017
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OrderInfo
     *
     * @mbg.generated Sat Feb 18 11:02:07 CST 2017
     */
    int insert(OrderInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OrderInfo
     *
     * @mbg.generated Sat Feb 18 11:02:07 CST 2017
     */
    OrderInfo selectByPrimaryKey(Integer id);

    OrderInfo getOrderInfo(String outTradeNo);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OrderInfo
     *
     * @mbg.generated Sat Feb 18 11:02:07 CST 2017
     */
    List<OrderInfo> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table OrderInfo
     *
     * @mbg.generated Sat Feb 18 11:02:07 CST 2017
     */
    int updateByPrimaryKey(OrderInfo record);

    /**
     * 消费记录
     *
     * @param vendorId
     * @param orderStatus
     * @return
     * @author xiaojiang 2017年3月1日
     * @version 1.0
     * @since 1.0 2017年3月1日
     */
    List<Map<String, Object>> listOrderInfo(@Param("vendorId") int vendorId, @Param("orderStatus") int orderStatus, @Param("pageIndex") int pageIndex, @Param("pageSize") int pageSize);

    int listOrderInfoCount(@Param("vendorId") int vendorId, @Param("orderStatus") int orderStatus);

    /**
     * 获取店铺的今日交易额和，总交易额
     *
     * @param vendorId
     * @return
     */
    Map<String, Object> getVendorTrade(int vendorId);

    List<Map<String, Object>> listOrderInfoSimple(@Param("vendorId") int vendorId, @Param("orderStatus") int orderStatus);

    /**
     * 根据用户去统计用户所得的积分信息
     *
     * @param UserId
     * @return
     */
    Map<String, Object> sumjifen(int UserId);

    /**
     * 获取当前时间多少分钟前的所有未完成订单
     *
     * @param times
     * @return
     * @author xiaojiang 2017年3月7日
     * @version 1.0
     * @since 1.0 2017年3月7日
     */
    List<OrderInfo> listConditionOrderInfo(@Param("wait") int wait, @Param("times") int times);

    /**
     * 获取交易次数 和交易总额
     *
     * @return
     * @author xiaojiang 2017年4月5日
     * @version 1.0
     * @since 1.0 2017年4月5日
     */
    Map<String, Object> countPrices(@Param("status") int status, @Param("tradingArea") String tradingArea, @Param("type") int type, @Param("vendorName") String vendorName, @Param("beginTime") Date beginTime, @Param("endTime") Date endTime);

    /**
     * 更具id查询交易次数
     *
     * @param ids
     * @return
     * @author xiaojiang 2017年4月7日
     * @version 1.0
     * @since 1.0 2017年4月7日
     */
    Map<String, Object> countPrice(List<Integer> ids);


    List<Map<String, Object>> listLimitOrderInfo(@Param("pageSize") Integer pageSize, @Param("pageIndex") Integer pageIndex, @Param("tradingArea") String tradingArea,
                                                 @Param("vendorName") String vendorName, @Param("beginTime") Date beginTime, @Param("endTime") Date endTime, @Param("type") int type);

    int listCountOrderInfo(@Param("tradingArea") String tradingArea,
                           @Param("vendorName") String vendorName, @Param("beginTime") Date beginTime, @Param("endTime") Date endTime, @Param("type") int type);


    /**
     * 获取用户的消费记录
     *
     * @return
     */
    PageResult<List<OrderInfo>> selectUserOrderRecord(BasePageSearch search);


    /**
     * C端订单详情专属接口
     * <p>
     * * @return
     */
    OrderInfo getOrderInfoC(String orderno);

    /**
     * 根据ID获取支付用户昵称和支付款信息
     *
     * @param id
     * @return
     */
    OrderInfo selectPayUserInfoByID(Integer id);
}