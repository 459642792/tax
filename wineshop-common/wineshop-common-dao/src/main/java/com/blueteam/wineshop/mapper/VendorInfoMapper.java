package com.blueteam.wineshop.mapper;

import com.blueteam.base.constant.Enums;
import com.blueteam.entity.dto.VendorSearch;
import com.blueteam.entity.dto.PageResult;
import com.blueteam.entity.po.VendorInfo;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

/**
 * @author Marx
 * <p>
 * VendorInfoDao.java
 * <p>
 * 2017年2月22日**@version 1.0
 */
public interface VendorInfoMapper {
    /**
     * @param CityCode
     * @return
     */
    List<VendorInfo> VendorInfoList(@Param("CityCode") String CityCode);

    List<VendorInfo> VendorInfoLists(@Param("CityCode") String CityCode);

    /**
     * @param Id
     * @return
     */
    VendorInfo vendorDetail(@Param("Id") int Id);

    /**
     * @param Id
     * @param VisitCount
     * @return
     */
    int updateVisit(@Param("Id") int Id,
                    @Param("VisitCount") int VisitCount);


    /**
     * @param Name
     * @return
     */
    List<VendorInfo> vendorInfoQuey(@Param("Name") String Name);

    /**
     * 查询该区域是否有关联商家
     */
    List<VendorInfo> quyuList(@Param("Name") String Name, @Param("CityCode") String CityCode);

    /**
     * @param Id
     * @param VisitCount
     * @return
     */
    int updateVisit(@Param("Id") int Id,
                    @Param("VisitCount") double VisitCount);


    /**
     * 获取运营商下面的商家详情
     *
     * @param carrisId 运营商ID
     * @param vendorId 商家ID
     * @return
     */
    VendorInfo getCarriersVendor(@Param("carrisId") int carrisId, @Param("vendorId") int vendorId);

    /**
     * 获取运营商下面的商家详情 根据运营商用户ID
     *
     * @param userId   运营商用户 ID
     * @param vendorId 商家ID
     * @return
     */
    VendorInfo getCarriersVendorByUserID(@Param("userId") int userId, @Param("vendorId") int vendorId);


    /**
     * 查询运营商管理区域范围的所有商家
     *
     * @param userId               运营商用户ID
     * @param authenticationStatus 商家审核状态
     * @param auditStatus          是否加V
     * @return
     */
    PageResult<List<VendorInfo>> carriersVendors(@Param("userId") Integer userId, @Param("authenticationStatus") Enums.VendorStatus authenticationStatus, @Param("auditStatus") String auditStatus, @Param("pageIndex") Integer pageIndex, @Param("pageSize") Integer pageSize);


    /**
     * 获取运营商下面 提交了资料等待认证审核的商家
     *
     * @param userId    运营商用户ID
     * @param status    商家状态
     * @param pageIndex 页码
     * @param pageSize
     * @return
     */
    PageResult<List<VendorInfo>> carriersPreAuthVendors(@Param("userId") Integer userId, @Param("status") Enums.VendorStatus status, @Param("pageIndex") Integer pageIndex, @Param("pageSize") Integer pageSize);

    /**
     * 查询运营商下面的商家
     *
     * @param carriersId  运营商ID
     * @param orderField  排序字段
     * @param orderBy     ASC OR DESC
     * @param status      状态
     * @param auditStatus 加V状态
     * @param pageIndex   页码
     * @param pageSize
     * @return
     */
    PageResult<List<VendorInfo>> carriersVendorList(@Param("carriersId") Integer carriersId, @Param("order") String orderField, @Param("orderby") String orderBy, @Param("status") Enums.VendorStatus status, @Param("auditStatus") String auditStatus, @Param("pageIndex") Integer pageIndex, @Param("pageSize") Integer pageSize);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VendorInfo
     *
     * @mbg.generated Mon Feb 20 17:40:15 CST 2017
     */
    int insert(VendorInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table VendorInfo
     *
     * @mbg.generated Mon Feb 20 17:40:15 CST 2017
     */
    int updateByPrimaryKey(VendorInfo record);

    VendorInfo findByUserId(Integer userId);

    /**
     * 根据搜索条件分页查询商家
     *
     * @param search
     * @return
     */
    PageResult<List<VendorInfo>> selectVendorListByWhere(VendorSearch search);

    /**
     * 根据商家ID获取商家信息
     *
     * @param id 商家ID
     * @return
     */
    VendorInfo getVendorById(int id);

    /**
     * 根据区域code获取商家列表
     *
     * @param vendorInfo 搜索代码
     * @return
     */
    List<VendorInfo> selectVendorByAreas(VendorInfo vendorInfo);

    /**
     * 发现商家列表
     *
     * @param CityCode
     * @return
     */
    List<VendorInfo> DiscoverVendorList(@Param("CityCode") String CityCode);

    /**
     * 推荐商家信息
     *
     * @param CityCode
     * @return
     */
    List<VendorInfo> VendorRecommendList(@Param("CityCode") String CityCode);

    /**
     * 根据ID获取商家和城市信息
     *
     * @param id
     * @return
     */
    VendorInfo getVendorAndCityById(@Param("id") Integer id);

    /**
     * 根据venderid 获取用户昵称和商家名称
     *
     * @param id 商家ID
     * @return
     */
    VendorInfo getVenderAndUserName(@Param("id") Integer id);

    String getManagementAreaById(@Param("id") int id);

    String getManagementAreaByUserId(@Param("userId") int userId);

    /**
     * 方法的功能描述:TODO 根据商家id 获取C端显示商家详情
     *
     * @return
     * @methodName
     * @param: null
     * @author xiaojiang 2017/10/19 15:16
     * @modifier
     * @since 1.4.0
     */
    Map<String, Object> getVendorByDetails(Integer vendorId);

    /**
     * 保存认证信息
     * @param info
     * @return
     */
    int saveAuthentication(VendorInfo info);

    /**
     * 修改认证信息
     * @param info
     * @return
     */
    int updateAuthentication(VendorInfo info);

    /**
     * 保存认证信息
     * @param
     * @return
     */
    VendorInfo getByUserId(int userId);

    /**
     * 修改信息
     * @param info
     * @return
     */
    int updateVendor(VendorInfo info);


    /**
     * 获取店铺信息
     * @param id
     * @return
     */
    VendorInfo getNewVendorById(int id);
    /**
     * 方法的功能描述:TODO 查询商户主营品牌
     *
     * @return
     * @methodName
     * @param: vendorId 商户ID
     * @author huangqijun 2018/1/9 14:19
     * @modifier
     * @since 1.4.0
     */
    List<String> listVendorMajorBrand(Integer vendorId);

    /**
     * 修改统计数据
     * @param vendorId
     * @param volume
     * @param pageViews
     * @param salesAmount
     * @return
     */
    int increaseOrderStatistics(@Param("vendorId") Integer vendorId,@Param("volume") Integer volume,
                                @Param("pageViews") Integer pageViews,@Param("salesAmount") Integer salesAmount);


    /**
     * 申请寄送二维码贴纸
     * @param vendorId
     * @return
     */
    int sendQRCode(Integer vendorId);

    /**
     * 绑定相关支付信息
     * @param vendorId
     * @return
     */
    void bindPayInfo(@Param("vendorId") Integer vendorId);
}
